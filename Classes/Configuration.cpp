#include "Configuration.h"
#include "GameStrings.h"
#include "VisibleRect.h"
#include "SimpleAudioEngine.h"

GameConfig s_gameConfig;

const std::string GameConfig::defaultFontName = "Arial";
const int GameConfig::defaultFontSize = 30;

const std::string GameConfig::eventLanguageChange = "eventLanguageChange";
const std::string GameConfig::eventPlayerDestroy = "eventPlayerDestroy";

void GameConfig::lazyInit()
{
    s_visibleRect.lazyInit();

    auto userDef = UserDefault::getInstance();
    musicVolume = userDef->getFloatForKey("music",1.0f);
    sfxVolume = userDef->getFloatForKey("sfx",1.0f);
    language = userDef->getIntegerForKey("language",int(GameLanguage::English));

    auto data = userDef->getDataForKey("bw",Data::Null);
    if (data.isNull())
    {
        fightersLocked[0] = false;
        fightersLocked[1] = true;
        fightersLocked[2] = true;
        fightersLocked[3] = true;
        fightersLocked[4] = true;
        fightersLocked[5] = true;

        fightersLevle[0] = 0;
        fightersLevle[1] = 0;
        fightersLevle[2] = 0;
        fightersLevle[3] = 0;
        fightersLevle[4] = 0;
        fightersLevle[5] = 0;

        weaponLocked = true;
        weaponsLevel[0] = 0;
        weaponsLevel[1] = 0;
        weaponsLevel[2] = 0;
    }
    else
    {
        auto data = userDef->getDataForKey("bw");
        auto importantData = data.getBytes();
        auto levelStartIndex = FIGHTER_MAX * 2;
        int index;
        for (int i = 0; i < FIGHTER_MAX; ++i)
        {
            index = 2 * i;
            fightersLocked[i] = importantData[index];
            fightersLevle[i] = importantData[levelStartIndex + index];
        }
        auto weaponStartIndex = levelStartIndex * 2;
        for (int j = 0; j < WEAPON_MAX; ++j)
        {
            index = 2 * j;
            weaponsLevel[j] = importantData[weaponStartIndex + index];
        }
    }
    

    CocosDenshion::SimpleAudioEngine::getInstance()->setEffectsVolume(musicVolume);
    CocosDenshion::SimpleAudioEngine::getInstance()->setEffectsVolume(sfxVolume);
    GSMainMenuInit((GameLanguage)language);
}

void GameConfig::saveConfig()
{
    auto userDef = UserDefault::getInstance();
    userDef->setFloatForKey("music",musicVolume);
    userDef->setFloatForKey("sfx",sfxVolume);
    userDef->setIntegerForKey("language",int(language));

    auto importantDataSize = sizeof(unsigned char) * (FIGHTER_MAX + FIGHTER_MAX + WEAPON_MAX + 1) * 2;
    auto importantData = (unsigned char*)malloc(importantDataSize);
    auto levelStartIndex = FIGHTER_MAX * 2;
    int index;
    for (int i = 0; i < FIGHTER_MAX; ++i)
    {
        index = 2 * i;
        importantData[index] = fightersLocked[i];
        importantData[index + 1] = rand();
        
        importantData[levelStartIndex + index] = fightersLevle[i];
        importantData[levelStartIndex + index + 1] = rand();
    }
    auto weaponStartIndex = levelStartIndex * 2;
    for (int j = 0; j < WEAPON_MAX; ++j)
    {
        index = 2 * j;
        importantData[weaponStartIndex + index] = weaponsLevel[j];
        importantData[weaponStartIndex + index + 1] = rand();
    }

    Data data;
    data.fastSet(importantData,importantDataSize);

    userDef->setDataForKey("bw",data);
}

void GameConfig::setMusicVolume(float volume)
{
    UserDefault::getInstance()->setFloatForKey("music", volume);
}

void GameConfig::setSFXVolume(float volume)
{
    UserDefault::getInstance()->setFloatForKey("sfx", volume);
}

PlainConfig s_plainConfigs[FIGHTER_MAX][FIGHTER_LEVEL_MAX] = {
    {//轻型战机： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,130},
        {100,100,100,  100,100,10,140},
        {100,100,100,  100,100,10,150},

        {100,100,100,  100,100,10,160},
        {100,100,100,  100,100,10,170},
        {100,100,100,  100,100,10,180},

        {100,100,100,  100,100,10,190},
        {100,100,100,  100,100,10,200},
        {100,100,100,  100,100,10,210},

        {100,100,100,  100,100,10,225},
        {100,100,100,  100,100,10,225},
        {100,100,100,  100,100,10,225},

        {100,100,100,  100,100,10,225},
        {100,100,100,  100,100,10,225},
        {100,100,100,  100,100,10,225}
    },
    {//合金甲战机： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},

        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},

        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,10,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100}
    },
    {//导弹战机： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100}
    },
    {//光束战机： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100}
    },
    {//磁力战机： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100}
    },
    {//黑色之翼： 建设所需晶石,升级所需宝石,生命，攻击，速度，防御，射程
        {100,100,100,  100,100,10,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},

        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100},
        {100,100,100,  100,100,100,100}
    }
};
EnemyConfig s_enemyConfigs[ENEMY_MAX][ENEMY_LEVEL_MAX] = {
    {//1 生命，攻击，速度，防御，射程
        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200},

        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200},
        {100,100,100,  10,200}
    },
    {//2生命，攻击，速度，防御，射程
        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220},

        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220},
        {100,100,100,  10,220}
    },
    {//3生命，攻击，速度，防御，射程
        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240},

        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240},
        {100,100,100,  10,240}
    },
    {//4生命，攻击，速度，防御，射程
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},

        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260}
    },
    {//5生命，攻击，速度，防御，射程
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},
        {100,100,100,  10,260},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    },
    {//6生命，攻击，速度，防御，射程
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    },
    {//7生命，攻击，速度，防御，射程
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    },
    {//8生命，攻击，速度，防御，射程
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    },
    {//9生命，攻击，速度，防御，射程
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    },
    {//10生命，攻击，速度，防御，射程
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},

        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100},
        {100,100,100,  10,100}
    }
};
WeaponConfig s_weaponConfigs[WEAPON_MAX][WEAPON_LEVEL_MAX] = {
    {//星际炸弹：购买所需宝石，升级所需宝石,攻击,持续时间,携带上限
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},

        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100}
    },
    {//激光发射器：购买所需宝石，升级所需宝石,攻击,持续时间,携带上限
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},

        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100}
    },
    {//黑洞：购买所需宝石，升级所需宝石,攻击,持续时间,携带上限
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},

        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100},
        {100,100,  100,100,100}
    }
};